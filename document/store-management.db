CREATE DATABASE IF NOT EXISTS TIRE_MANAGEMENT_SYS;
USE TIRE_MANAGEMENT_SYS;

CREATE TABLE PRODUCT
(
    ID              VARCHAR(50)    NOT NULL,
    NAME            VARCHAR(100),
    TYPE            VARCHAR(100),
    SIZE            VARCHAR(10),
    BRAND           VARCHAR(100),
    PATTERN         VARCHAR(50),
    IMAGE_PATH      VARCHAR(100),
    PRICE           DECIMAL(13, 4) NOT NULL,
    QUANTITY_REMAIN INT            NOT NULL,
    DESCRIPTION     VARCHAR(512),
    CREATED_DATE    DATETIME,
    CREATED_BY      VARCHAR(50),
    MODIFY_DATE     DATETIME,
    MODIFY_BY       VARCHAR(50),
    CONSTRAINT PK_PRODUCT PRIMARY KEY (ID)
);



CREATE TABLE PRICE_FLUCTUATION
(
    ID                   VARCHAR(50)    NOT NULL,
    PRODUCT_ID           VARCHAR(50)    NOT NULL,
    DATE                 DATETIME,
    CHANGED_IMPORT_PRICE DECIMAL(13, 4) NOT NULL,
    CURRENT_IMPORT_PRICE DECIMAL(13, 4),
    CHANGED_PRICE        DECIMAL(13, 4) NOT NULL,
    CURRENT_PRICE        DECIMAL(13, 4),
    CONSTRAINT PK_PRICE_FLUCTUATION PRIMARY KEY (ID),
    CONSTRAINT FK_PRICE_FLUCTUATION_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (ID)
);



CREATE TABLE ACCOUNT
(
    ID       VARCHAR(50),
    USERNAME VARCHAR(50),
    PASSWORD VARCHAR(50),
    SALT     CHAR(32),
    CONSTRAINT PK_ACCOUNT PRIMARY KEY (ID)
);


CREATE TABLE OPERATION_HISTORY
(
    ID          VARCHAR(50),
    ACCOUNT_ID  VARCHAR(50),
    ACTION      VARCHAR(50),
    MESSAGE     VARCHAR(256),
    ACTION_DATE DATETIME,
    CONSTRAINT PK_OPS_HISTORY PRIMARY KEY (ID),
    CONSTRAINT FK_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ID)
);


CREATE TABLE IE_REPORT
(
    ID              VARCHAR(50),
    ACCOUNT_ID      VARCHAR(50),
    PRODUCT_ID      VARCHAR(50),
    CREATE_TIME     DATETIME,
    UPDATE_TIME     DATETIME,
    ACTION          VARCHAR(20),
    QUANTITY_UPDATE INT,
    PRICE_UPDATE    DECIMAL(13, 4),
    CONSTRAINT PK_IE_REPORT PRIMARY KEY (ID),
    CONSTRAINT FK_IE_HISTORY__ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ID),
    CONSTRAINT FK_IE_HISOTRY_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (ID)
);


CREATE TABLE CUSTOMER
(
    ID                  VARCHAR(50),
    FULL_NAME           VARCHAR(50),
    ADDRESS             VARCHAR(512),
    BANK_ACCOUNT_NUMBER VARCHAR(20),
    TAX_CODE            VARCHAR(20),
    CONSTRAINT PK_CUSTOMER PRIMARY KEY (ID)
);


CREATE TABLE INVOICE
(
    ID          VARCHAR(50),
    INVOICE_NO  INT,
    EXPORT_DATE DATETIME,
    DETAIL      VARCHAR(512),
    TOTAL       DECIMAL(13, 4),
    ACCOUNT_ID  VARCHAR(50),
    CUSTOMER_ID VARCHAR(50),
    CONSTRAINT PK_INVOICE PRIMARY KEY (ID),
    CONSTRAINT FK_INVOICE_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ID),
    CONSTRAINT FK_INVOICE_CUSTOMER FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (ID)
);



CREATE TABLE INVOICE_LINE
(
    ID          VARCHAR(50),
    QUANTITY    INT,
    TOTAL       DECIMAL(13, 4),
    DESCRIPTION VARCHAR(256),
    INVOICE_ID  VARCHAR(50),
    CONSTRAINT PK_INVOICE_LINE PRIMARY KEY (ID),
    CONSTRAINT FK_INVOICE_LINE_INVOICE FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE (ID)
);


CREATE TABLE EXPORT_UNIT
(
    ID                   VARCHAR(50),
    PRICE_FLUCTUATION_ID VARCHAR(50),
    WARRANTY_CODE        VARCHAR(50),
    TYPE                 VARCHAR(50),
    EXPORT_PRICE         DECIMAL(13, 4),
    QUANTITY             INT,
    BILLING              BOOL,
    DATETIME             DATETIME,
    ACCOUNT_ID           VARCHAR(50),
    INVOICE_LINE_ID      VARCHAR(50),
    CONSTRAINT PK_EXPORT_UNIT PRIMARY KEY (ID),
    CONSTRAINT FK_EXPORT_UNIT_INVOICE_LINE FOREIGN KEY (INVOICE_LINE_ID) REFERENCES INVOICE_LINE (ID),
    CONSTRAINT FK_EXPORT_UNIT_PRICE_FLUCTUATION FOREIGN KEY (PRICE_FLUCTUATION_ID) REFERENCES PRICE_FLUCTUATION (ID),
    CONSTRAINT FK_EXPORT_UNIT_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ID)
);



























